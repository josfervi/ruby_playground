UNANSWERED

what is a memo?  (see reduce: https://ruby-doc.org/core-2.1.0/Enumerable.html#method-i-reduce)
what is a block? (see reduce: https://ruby-doc.org/core-2.1.0/Enumerable.html#method-i-reduce)

how to map? e.g. "abcde".map { |chr| 1 if chr.vowel? else 0 } #=> [1,0,0,0,1]

what does ruby 'do' do?
when are things like '|val|' and {} used?

does ruby support the functional paradigm? because I get the feeling it does.

what is a symbol (e.g. :dog) in ruby? how's it different from a variable?

in the standard ruby libraries, does the ! in !-punctuated methods (e.g. Array#sort!) indicate that the method is in-place? has side-effects? modifies the input? what does it mean?

how does ruby disambiguate between a variable and a zero-argument-method that have the same name?
in 20-num-repeats, I can see how: num_repeats is a variable and also a one-argument method.

difference between .each do { |stuff| stuff } (is this one even valid?), .each do |stuff| stuff end, and for val in array stuff end?

from 14-array_extensions.rb
Q1: when i do [1,2,3].square I get a NoMethodError:
       undefined method `is_not_a?' for 1:Fixnum
    but I've defined is_not_a? for Object and Fixnum inherits from Object
    so shouldn't is_not_a? exist for Fixnum?
#
Q2: how can use a decorator to do the error handling of lns 3-5
    this would help me not repeat myself as I do this same error handling in Array#square! and Array#sum
#
 1  class Array
 2    def square
 3      if self.any? {|x| x.is_not_a? Numeric}
 4        raise TypeError, "array contains non-numeric elements; array must not contain non-numeric elements"
 5      end
 6      self.map {|x| x**2}
 7    end
 8  end
 9  
10  def Object
11    def is_not_a? cls
12      ! self.is_a? cls
13    end
14  end

ANSWERED:
what is :dog? is it a variable? a symbol? a record?
A: they are symbols